{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","categories","onSubmit","className","type","placeholder","aria-label","aria-describedby","value","onChange","target","onClick","GifGridItem","title","url","src","alt","height","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","setTimeout","then","result","useFetchGifs","GifExpertApp","class","role","Container","ReactDOM","render","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAQvCC,EAAe,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAqBO,OAC9CN,EAAc,MAOtB,OACI,sBAAMO,SAAUN,EAAhB,SACI,sBAAKO,UAAU,+BAAf,UACI,uBACAC,KAAK,OACLD,UAAU,eACVE,YAAY,eACZC,aAAW,eACXC,mBAAiB,eACjBC,MAAOd,EACPe,SA3BQ,SAACZ,GACjBF,EAAcE,EAAEa,OAAOF,UA4Bf,qBAAKL,UAAU,qBAAf,SACI,wBAAQA,UAAU,4BAA4BC,KAAK,SAASO,QAASf,EAArE,4B,QCnCPgB,EAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAC/B,OACI,sBAAKX,UAAU,sEAAf,UAEI,qBAAKA,UAAU,eAAeY,IAAKD,EAAKE,IAAKH,EAAQI,OAAO,QAC5D,qBAAKd,UAAU,YAAf,SACI,oBAAIA,UAAU,yBAAd,SAAuC,4BAAIU,Y,uBCR9CK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,0FAC6EO,UAAUF,GADvF,qBAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACThB,MAAQe,EAAIf,MACZC,IAAG,UAAGc,EAAIE,cAAP,aAAG,EAAYC,iBAAiBjB,QATxB,kBAcZY,GAdY,4CAAH,sDCKPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZ1B,mBAAS,CAC/BgC,KAAO,GACPQ,SAAU,IAHwB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAXAC,qBAAW,WAEPC,YAAW,WACPnB,EAAQC,GAAUmB,MAAM,SAAAC,GAAYJ,EAAS,CACzCV,KAAOc,EACPN,SAAU,SAEf,QAEN,CAAEd,IAEIe,EDX0BM,CAAarB,GAAlCW,EAJuB,EAI5BL,KAAcQ,EAJc,EAIdA,QAErB,OACI,qCACI,6BAAKd,IACHc,GAAW,mBAAG9B,UAAU,mCAAb,yBACb,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,eAAf,SAGY2B,EAAOH,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,eAEKA,GADCA,EAAIC,eEqBlCY,EAnCM,WACrB,MAGwChD,mBAAS,CAAE,gBAHnD,mBAGWQ,EAHX,KAGuBT,EAHvB,KAMI,OAAS,qCAGD,sBAAKkD,MAAM,sBAAsBC,KAAK,QAAtC,UACI,oBAAID,MAAM,gBAAV,2BACA,+DACA,0BAGA,cAACE,EAAA,EAAD,CAAWzC,UAAU,kBAArB,SAEG,qBAAKA,UAAU,uBAAf,SACE,cAAC,EAAD,CAAaX,cAAeA,QAIjC,6BAEYS,EAAW0B,KAAK,SAAAR,GACZ,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,YCxBrD0B,IAASC,OACN,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c8a9f3fc.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setcategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const inputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2)\r\n        {\r\n            setcategories( categories => [inputValue , ...categories]);\r\n            setInputValue('');\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"input-group mb-3 text-center\">\r\n                <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                placeholder=\"Buscar GIPHY\" \r\n                aria-label=\"Buscar GIPHY\"\r\n                aria-describedby=\"basic-addon2\"\r\n                value={inputValue}\r\n                onChange={inputChange}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={handleSubmit}>Buscar</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories : PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card border-secondary mb-3 sm animate__animated animate__backInLeft\">\r\n           \r\n            <img className=\"card-img-top\" src={url} alt={title}  height=\"300\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title text-center\"><b>{title}</b></h5>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=d0FjIIDTFuCjCI81AVHF3kcnX0d0L8ef&q=${ encodeURI(category) }&limit=8`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return { \r\n            id : img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url\r\n\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react';\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n\r\n   const { data:images , loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n            <div className=\"row\">\r\n                <div className=\"card-columns\">\r\n                    \r\n                        {  \r\n                            images.map( img => {\r\n                                return <GifGridItem \r\n                                        key={img.id}\r\n                                        {...img}\r\n                                    />;\r\n                            }) \r\n                        }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data : [],\r\n        loading : true\r\n    });    \r\n\r\n    useEffect( () => {\r\n        //console.log('ejecuto',category);\r\n        setTimeout(() => {\r\n            getGifs(category).then( result => { setstate({\r\n                data : result,\r\n                loading : false\r\n            })});    \r\n        }, 1200);\r\n        \r\n   },[ category]); //Arreglo vacio indica que solo se va ejecutar una sola vez al renderizar el componente\r\n\r\n    return state;\r\n}\r\n","import React , {useState} from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\n\r\n\r\nconst GifExpertApp = () =>\r\n{\r\n    //const categories = [ 'One Punch' , 'Samurai X' , 'Dragon Ball' ];\r\n\r\n    const [categories, setcategories] = useState([ 'Programador' ]);\r\n    \r\n\r\n    return ( <>\r\n                \r\n\r\n            <div class=\"alert alert-success\" role=\"alert\">\r\n                <h2 class=\"alert-heading\">GifExpertApp!</h2>\r\n                <p>Curso de React (Hooks y MERN).</p>\r\n                <hr/>\r\n            </div>\r\n\r\n                <Container className=\"row text-center\">\r\n\r\n                   <div className=\"col-sp-2 text-center\">\r\n                     <AddCategory setcategories={setcategories}></AddCategory>\r\n                   </div> \r\n                </Container>\r\n\r\n                <ol>\r\n                        {\r\n                            categories.map( category =>{\r\n                                return <GifGrid key={category} category={category}/>;\r\n                            })\r\n                        }\r\n                </ol>\r\n                \r\n             </>\r\n            );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n\n\nReactDOM.render(\n   <GifExpertApp />,\n   document.getElementById('root')\n);\n\n"],"sourceRoot":""}